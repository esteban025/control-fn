---
import ArrowIcon from "@/assets/arrow.svg";
import Layout from "@/layouts/Layout.astro";
import { getSession } from "auth-astro/server";
const session = await getSession(Astro.request);

if (!session) {
  return Astro.redirect("/login");
}
const itemsNav = ["Resumen", "Análisis", "Presupuestos", "Gastos"];
---

<Layout title="Dashboard" description="Control de Finanzas - Dashboard">
  <main
    class="w-full min-h-screen p-4 relative z-10 flex items-start flex-col gap-4"
  >
    <!-- header-false -->
    <header class="w-full h-[50px]"></header>
    <!-- saludamos al usuario -->
    <section class="flex justify-between items-center w-full max-w-6xl mx-auto">
      <h2 class="text-xl font-semibold">Dashboard</h2>
      <div class="ss">
        <figure>
          <img
            src={session?.user?.image || "/default-avatar.png"}
            alt="Avatar"
            class="size-10 rounded-full"
          />
        </figure>
      </div>
    </section>

    <!-- navegacion de mes -->
    <section
      class="w-full max-w-6xl mx-auto bg-gray-50 rounded-full p-2 shadow-lg"
    >
      <nav class="flex items-center justify-between w-full max-w-6xl mx-auto">
        <button
          class="p-2 rounded-full border border-gray-100 cursor-pointer bg-white"
        >
          <span class="rotate-180 block">
            <ArrowIcon class="size-5" />
          </span>
        </button>
        <span class="text-lg font-semibold">Septiembre 2023</span>
        <button
          class="p-2 rounded-full border border-gray-100 cursor-pointer bg-white"
        >
          <span class="block">
            <ArrowIcon class="size-5" />
          </span>
        </button>
      </nav>
    </section>

    <!-- tarjetas de resumen -->
    <section
      class="w-full max-w-6xl mx-auto mt-4 p-6 rounded-lg shadow-md"
      style="background-image: url('https://www.transparenttextures.com/patterns/cartographer.png'), linear-gradient(to right, var(--color-sky-100), var(--color-emerald-100)); background-blend-mode: color-burn;"
    >
      <h2 class="text-lg font-semibold mb-2">Resumen del Mes</h2>
      <p class="text-gray-800 mb-4">
        Aquí puedes ver un resumen de tus finanzas para el mes actual.
      </p>
      <div class="grid grid-cols-3 gap-4 mt-4">
        <div class="bg-gray-50/90 p-4 rounded-lg shadow-md">
          <h3 class="text-lg font-semibold">Ingresos</h3>
          <p class="text-xl text-gray-600">$5,000</p>
        </div>
        <div class="bg-gray-50/90 p-4 rounded-lg shadow-md">
          <h3 class="text-lg font-semibold">Gastos</h3>
          <p class="text-xl text-gray-600">$3,000</p>
        </div>
        <div class="bg-gray-50/90 p-4 rounded-lg shadow-md">
          <h3 class="text-lg font-semibold">Ahorros</h3>
          <p class="text-xl text-gray-600">$2,000</p>
        </div>
      </div>
    </section>

    <!-- navegacion de detalles -->
    <nav class="w-full mt-6">
      <ul
        class="grid grid-cols-4 gap-3 items-center justify-center bg-gray-50 p-2 rounded-full relative overflow-hidden shadow-lg max-w-6xl mx-auto"
        id="nav-list"
      >
        {
          itemsNav.map((item) => (
            <li class="flex items-center justify-center">
              <a
                class="w-full text-center relative z-[1] py-1 cursor-pointer text-gray-800 truncate text-sm lg:text-base"
                data-item-name={item}
              >
                {item}
              </a>
            </li>
          ))
        }
        <li
          id="active-indicator"
          class={`w-1/4 absolute inset-1 rounded-full bg-white pointer-events-none transition-all duration-400 ease-in-out shadow-md border border-gray-200`}
        >
        </li>
      </ul>
    </nav>
  </main>
</Layout>

<script>
  const $itemsNav = document.querySelectorAll(
    "#nav-list li a",
  ) as NodeListOf<HTMLLIElement>;

  function setActiveIndicator(trsnform: string, left: string) {
    const $activeIndicator = document.getElementById(
      "active-indicator",
    ) as HTMLLIElement;
    $activeIndicator.style.transform = trsnform;
    $activeIndicator.style.left = left;
  }

  $itemsNav.forEach(($item) => {
    $item.addEventListener("click", () => {
      const { itemName } = $item.dataset;

      switch (itemName) {
        case "Resumen":
          setActiveIndicator("translateX(0px)", "4px");
          break;
        case "Análisis":
          setActiveIndicator(`translateX(calc(100% - 2px))`, "0px");
          break;
        case "Presupuestos":
          setActiveIndicator(`translateX(calc(200% - 2px))`, "0px");
          break;
        case "Gastos":
          setActiveIndicator(`translateX(calc(300% - 4px))`, "0px");
          break;
      }
    });
  });
</script>
