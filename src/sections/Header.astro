---
import GoogleIcon from "@/assets/google.svg";
import Logo from "@/assets/logo.svg";
import LogoutIcon from "@/assets/logout.svg";
import Buttons from "@/components/Buttons.astro";
import { getSession } from "auth-astro/server";
const session = await getSession(Astro.request);

interface Props {
  inLogin?: boolean;
}
const { inLogin = false } = Astro.props as Props;
---

<header
  class="p-2 rounded-full fixed top-2 z-50 left-0 right-0 animate-scroll-down w-11/12 max-w-4xl mx-auto"
>
  <div class="flex items-center justify-between w-full">
    <a class="flex w-full max-w-24 lg:max-w-32" href="/">
      <Logo class="w-full h-auto pl-1" />
    </a>
    {
      !inLogin && (
        <>
          {session ? (
            // <Buttons name="Cerrar Sesión" btnId="logout-button" secondary />
            <div class="space-x-2 flex items-center gap-2">
              <button id="logout-button" class="cursor-pointer">
                <LogoutIcon class="size-6 inline-block" />
              </button>
              <figure>
                <img
                  class="size-10 rounded-full"
                  src={session.user?.image || ""}
                  alt="Usuario"
                />
              </figure>
            </div>
          ) : (
            <Buttons
              name="Iniciar Sesión"
              btnId="login-button"
              moreClasses="text-sm"
            >
              <GoogleIcon class="size-5 inline-block" slot="icon" />
            </Buttons>
          )}
        </>
      )
    }
  </div>
</header>

<style>
  .animate-scroll-down {
    animation: scrollDown 5s both;
    animation-timeline: scroll(root block);
    animation-range: 0px 200px;
  }

  @keyframes scrollDown {
    from {
      backdrop-filter: blur(0px);
      background-color: transparent;
    }
    to {
      backdrop-filter: blur(10px);
      box-shadow: rgba(0, 0, 0, 0.15) 0px 15px 25px -12px;
      background-color: color-mix(
        in oklab,
        var(--color-gray-50) 50%,
        transparent
      );
      transform: scale(0.95);
    }
  }
</style>
